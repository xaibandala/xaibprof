{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/User/Documents/myprofile/my-app/components/AnimatedContent.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useRef, useEffect, ReactNode } from \"react\";\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\n\ngsap.registerPlugin(ScrollTrigger);\n\ntype AnimatedContentProps = {\n  children: ReactNode;\n  distance?: number;\n  direction?: \"vertical\" | \"horizontal\";\n  reverse?: boolean;\n  duration?: number;\n  ease?: string;\n  initialOpacity?: number;\n  animateOpacity?: boolean;\n  scale?: number;\n  threshold?: number; // 0..1\n  delay?: number;\n  onComplete?: () => void;\n  className?: string;\n};\n\nconst AnimatedContent: React.FC<AnimatedContentProps> = ({\n  children,\n  distance = 100,\n  direction = \"vertical\",\n  reverse = false,\n  duration = 1.4,\n  ease = \"power3.out\",\n  initialOpacity = 0,\n  animateOpacity = true,\n  scale = 1,\n  threshold = 0.1,\n  delay = 0,\n  onComplete,\n  className,\n}) => {\n  const ref = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    const el = ref.current;\n    if (!el) return;\n\n    const axis = direction === \"horizontal\" ? \"x\" : \"y\";\n    const offset = reverse ? -distance : distance;\n    const startPct = (1 - Math.min(Math.max(threshold, 0), 1)) * 100;\n\n    gsap.set(el, {\n      [axis]: offset,\n      scale,\n      opacity: animateOpacity ? initialOpacity : 1,\n    } as any);\n\n    const tween = gsap.to(el, {\n      [axis]: 0,\n      scale: 1,\n      opacity: 1,\n      duration,\n      ease,\n      delay,\n      onComplete,\n      scrollTrigger: {\n        trigger: el,\n        start: `top ${startPct}%`,\n        toggleActions: \"play none none none\",\n        once: true,\n      },\n    } as any);\n\n    return () => {\n      tween.scrollTrigger?.kill();\n      tween.kill();\n    };\n  }, [distance, direction, reverse, duration, ease, initialOpacity, animateOpacity, scale, threshold, delay, onComplete]);\n\n  return (\n    <div ref={ref} className={className}>\n      {children}\n    </div>\n  );\n};\n\nexport default AnimatedContent;\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAJA;;;;;AAMA,kKAAI,CAAC,cAAc,CAAC,mKAAa;AAkBjC,MAAM,kBAAkD,CAAC,EACvD,QAAQ,EACR,WAAW,GAAG,EACd,YAAY,UAAU,EACtB,UAAU,KAAK,EACf,WAAW,GAAG,EACd,OAAO,YAAY,EACnB,iBAAiB,CAAC,EAClB,iBAAiB,IAAI,EACrB,QAAQ,CAAC,EACT,YAAY,GAAG,EACf,QAAQ,CAAC,EACT,UAAU,EACV,SAAS,EACV;IACC,MAAM,MAAM,IAAA,4NAAM,EAAwB;IAE1C,IAAA,+NAAS,EAAC;QACR,MAAM,KAAK,IAAI,OAAO;QACtB,IAAI,CAAC,IAAI;QAET,MAAM,OAAO,cAAc,eAAe,MAAM;QAChD,MAAM,SAAS,UAAU,CAAC,WAAW;QACrC,MAAM,WAAW,CAAC,IAAI,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,WAAW,IAAI,EAAE,IAAI;QAE7D,kKAAI,CAAC,GAAG,CAAC,IAAI;YACX,CAAC,KAAK,EAAE;YACR;YACA,SAAS,iBAAiB,iBAAiB;QAC7C;QAEA,MAAM,QAAQ,kKAAI,CAAC,EAAE,CAAC,IAAI;YACxB,CAAC,KAAK,EAAE;YACR,OAAO;YACP,SAAS;YACT;YACA;YACA;YACA;YACA,eAAe;gBACb,SAAS;gBACT,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;gBACzB,eAAe;gBACf,MAAM;YACR;QACF;QAEA,OAAO;YACL,MAAM,aAAa,EAAE;YACrB,MAAM,IAAI;QACZ;IACF,GAAG;QAAC;QAAU;QAAW;QAAS;QAAU;QAAM;QAAgB;QAAgB;QAAO;QAAW;QAAO;KAAW;IAEtH,qBACE,2PAAC;QAAI,KAAK;QAAK,WAAW;kBACvB;;;;;;AAGP;uCAEe","debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/User/Documents/myprofile/my-app/components/SplitText.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useRef, useEffect } from \"react\";\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\n\n// SplitText is a paid GSAP plugin. We'll try to load it if available.\nlet SplitTextPlugin: any = null;\ntry {\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  SplitTextPlugin = require(\"gsap/SplitText\").SplitText || require(\"gsap/SplitText\");\n  if (SplitTextPlugin) {\n    gsap.registerPlugin(SplitTextPlugin);\n  }\n} catch (e) {\n  // Plugin not available; component will gracefully degrade without animation.\n}\n\n// Register ScrollTrigger (free plugin, safe to import)\ngsap.registerPlugin(ScrollTrigger);\n\nexport type SplitTextProps = {\n  text: string;\n  className?: string;\n  delay?: number; // milliseconds between characters\n  duration?: number;\n  ease?: string;\n  splitType?: \"chars\" | \"words\" | \"lines\";\n  from?: gsap.TweenVars;\n  to?: gsap.TweenVars;\n  threshold?: number; // 0..1 portion of element in view before start\n  rootMargin?: string; // like CSS margin (e.g. \"-100px\")\n  textAlign?: React.CSSProperties[\"textAlign\"];\n  onLetterAnimationComplete?: () => void;\n};\n\nconst SplitText: React.FC<SplitTextProps> = ({\n  text,\n  className = \"\",\n  delay = 100,\n  duration = 0.6,\n  ease = \"power3.out\",\n  splitType = \"chars\",\n  from = { opacity: 0, y: 40 },\n  to = { opacity: 1, y: 0 },\n  threshold = 0.1,\n  rootMargin = \"-100px\",\n  textAlign = \"center\",\n  onLetterAnimationComplete,\n}) => {\n  const ref = useRef<HTMLParagraphElement | null>(null);\n  const animationCompletedRef = useRef(false);\n  const scrollTriggerRef = useRef<ScrollTrigger | null>(null);\n\n  useEffect(() => {\n    if (typeof window === \"undefined\" || !ref.current || !text) return;\n\n    const el = ref.current;\n    animationCompletedRef.current = false;\n\n    const absoluteLines = splitType === \"lines\";\n    if (absoluteLines) (el as HTMLElement).style.position = \"relative\";\n\n    let splitter: any;\n    try {\n      if (!SplitTextPlugin) {\n        // If plugin missing, simply set final state and exit.\n        gsap.set(el, { opacity: to?.opacity ?? 1, y: to?.y ?? 0 });\n        return;\n      }\n      // eslint-disable-next-line new-cap\n      splitter = new SplitTextPlugin(el, {\n        type: splitType,\n        absolute: absoluteLines,\n        linesClass: \"split-line\",\n      });\n    } catch (error) {\n      console.error(\"Failed to create SplitText:\", error);\n      return;\n    }\n\n    let targets: HTMLElement[] = [];\n    switch (splitType) {\n      case \"lines\":\n        targets = splitter.lines as HTMLElement[];\n        break;\n      case \"words\":\n        targets = splitter.words as HTMLElement[];\n        break;\n      case \"chars\":\n      default:\n        targets = splitter.chars as HTMLElement[];\n        break;\n    }\n\n    if (!targets || targets.length === 0) {\n      console.warn(\"No targets found for SplitText animation\");\n      splitter.revert();\n      return;\n    }\n\n    targets.forEach((t: HTMLElement) => {\n      t.style.willChange = \"transform, opacity\";\n    });\n\n    // Build ScrollTrigger start value based on threshold and rootMargin\n    const startPct = (1 - threshold) * 100;\n    const marginMatch = /^(\\-?\\d+(?:\\.\\d+)?)(px|em|rem|%)?$/.exec(rootMargin);\n    const marginValue = marginMatch ? parseFloat(marginMatch[1]) : 0;\n    const marginUnit = marginMatch ? marginMatch[2] || \"px\" : \"px\";\n    const sign = marginValue < 0 ? `-=${Math.abs(marginValue)}${marginUnit}` : `+=${marginValue}${marginUnit}`;\n    const start = `top ${startPct}%${sign}`;\n\n    const tl = gsap.timeline({\n      scrollTrigger: {\n        trigger: el,\n        start,\n        toggleActions: \"play none none none\",\n        once: true,\n        onToggle: (self) => {\n          scrollTriggerRef.current = self as unknown as ScrollTrigger;\n        },\n      },\n      smoothChildTiming: true,\n      onComplete: () => {\n        animationCompletedRef.current = true;\n        gsap.set(targets, {\n          ...to,\n          clearProps: \"willChange\",\n          immediateRender: true,\n        });\n        onLetterAnimationComplete?.();\n      },\n    });\n\n    tl.set(targets, { ...from, immediateRender: false, force3D: true });\n    tl.to(targets, {\n      ...to,\n      duration,\n      ease,\n      stagger: delay / 1000,\n      force3D: true,\n    });\n\n    return () => {\n      tl.kill();\n      if (scrollTriggerRef.current) {\n        scrollTriggerRef.current.kill();\n        scrollTriggerRef.current = null;\n      }\n      gsap.killTweensOf(targets);\n      try { splitter && splitter.revert && splitter.revert(); } catch {}\n    };\n  }, [\n    text,\n    delay,\n    duration,\n    ease,\n    splitType,\n    from,\n    to,\n    threshold,\n    rootMargin,\n    onLetterAnimationComplete,\n  ]);\n\n  return (\n    <p\n      ref={ref}\n      className={`split-parent overflow-hidden inline-block whitespace-normal ${className}`}\n      style={{ textAlign, wordWrap: \"break-word\" }}\n    >\n      {text}\n    </p>\n  );\n};\n\nexport default SplitText;\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAJA;;;;;AAMA,sEAAsE;AACtE,IAAI,kBAAuB;AAC3B,IAAI;IACF,8DAA8D;IAC9D,kBAAkB,kGAA0B,SAAS;IACrD,IAAI,iBAAiB;QACnB,kKAAI,CAAC,cAAc,CAAC;IACtB;AACF,EAAE,OAAO,GAAG;AACV,6EAA6E;AAC/E;AAEA,uDAAuD;AACvD,kKAAI,CAAC,cAAc,CAAC,mKAAa;AAiBjC,MAAM,YAAsC,CAAC,EAC3C,IAAI,EACJ,YAAY,EAAE,EACd,QAAQ,GAAG,EACX,WAAW,GAAG,EACd,OAAO,YAAY,EACnB,YAAY,OAAO,EACnB,OAAO;IAAE,SAAS;IAAG,GAAG;AAAG,CAAC,EAC5B,KAAK;IAAE,SAAS;IAAG,GAAG;AAAE,CAAC,EACzB,YAAY,GAAG,EACf,aAAa,QAAQ,EACrB,YAAY,QAAQ,EACpB,yBAAyB,EAC1B;IACC,MAAM,MAAM,IAAA,4NAAM,EAA8B;IAChD,MAAM,wBAAwB,IAAA,4NAAM,EAAC;IACrC,MAAM,mBAAmB,IAAA,4NAAM,EAAuB;IAEtD,IAAA,+NAAS,EAAC;QACR,wCAA4D;;;QAE5D,MAAM;QAGN,MAAM;QAGN,IAAI;QAkBJ,IAAI;QAwBJ,oEAAoE;QACpE,MAAM;QACN,MAAM;QACN,MAAM;QACN,MAAM;QACN,MAAM;QACN,MAAM;QAEN,MAAM;IAwCR,GAAG;QACD;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,qBACE,2PAAC;QACC,KAAK;QACL,WAAW,CAAC,4DAA4D,EAAE,WAAW;QACrF,OAAO;YAAE;YAAW,UAAU;QAAa;kBAE1C;;;;;;AAGP;uCAEe","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/User/Documents/myprofile/my-app/app/projects/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport AnimatedContent from \"../../components/AnimatedContent\";\nimport ProjectCard from \"../../components/ProjectCard\";\nimport ClickSpark from \"../../components/ClickSpark\";\nimport SplitText from \"../../components/SplitText\";\n\nexport default function ProjectsPage() {\n  return (\n    <ClickSpark sparkColor=\"#ffffff\" sparkSize={10} sparkRadius={15} sparkCount={10} duration={450}>\n      <main className=\"px-6 sm:px-10 py-10 mx-auto max-w-6xl\">\n      <section>\n        <AnimatedContent distance={80} direction=\"vertical\" duration={1.2} initialOpacity={0} animateOpacity>\n          <div className=\"mb-8 sm:mb-10 text-center\">\n            <SplitText\n              text=\"Projects\"\n              className=\"text-3xl sm:text-4xl md:text-5xl font-extrabold tracking-tight\"\n              delay={160}\n              duration={1.2}\n              ease=\"power3.out\"\n              splitType=\"chars\"\n              from={{ opacity: 0, y: 40 }}\n              to={{ opacity: 1, y: 0 }}\n              threshold={0.1}\n              rootMargin=\"-100px\"\n              textAlign=\"center\"\n            />\n          </div>\n        </AnimatedContent>\n        <AnimatedContent distance={80} direction=\"vertical\" duration={0.8} initialOpacity={0} animateOpacity>\n          <MagicBento\n            textAutoHide\n            enableStars\n            enableSpotlight\n            enableBorderGlow\n            enableTilt\n            enableMagnetism\n            clickEffect\n            spotlightRadius={300}\n            particleCount={12}\n            glowColor=\"132, 0, 255\"\n          />\n        </AnimatedContent>\n      </section>\n    </main>\n    </ClickSpark>\n  );\n}\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AACA;AANA;;;;;AAQe,SAAS;IACtB,qBACE,2PAAC,iJAAU;QAAC,YAAW;QAAU,WAAW;QAAI,aAAa;QAAI,YAAY;QAAI,UAAU;kBACzF,cAAA,2PAAC;YAAK,WAAU;sBAChB,cAAA,2PAAC;;kCACC,2PAAC,sJAAe;wBAAC,UAAU;wBAAI,WAAU;wBAAW,UAAU;wBAAK,gBAAgB;wBAAG,cAAc;kCAClG,cAAA,2PAAC;4BAAI,WAAU;sCACb,cAAA,2PAAC,gJAAS;gCACR,MAAK;gCACL,WAAU;gCACV,OAAO;gCACP,UAAU;gCACV,MAAK;gCACL,WAAU;gCACV,MAAM;oCAAE,SAAS;oCAAG,GAAG;gCAAG;gCAC1B,IAAI;oCAAE,SAAS;oCAAG,GAAG;gCAAE;gCACvB,WAAW;gCACX,YAAW;gCACX,WAAU;;;;;;;;;;;;;;;;kCAIhB,2PAAC,sJAAe;wBAAC,UAAU;wBAAI,WAAU;wBAAW,UAAU;wBAAK,gBAAgB;wBAAG,cAAc;kCAClG,cAAA,2PAAC;4BACC,YAAY;4BACZ,WAAW;4BACX,eAAe;4BACf,gBAAgB;4BAChB,UAAU;4BACV,eAAe;4BACf,WAAW;4BACX,iBAAiB;4BACjB,eAAe;4BACf,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOtB","debugId":null}}]
}